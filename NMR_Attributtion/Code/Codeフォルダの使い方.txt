Codeフォルダの構成

1_list_to_rawCSV
→Sparkyで帰属した結果はlistファイルとして出力されるので、Assignment, w1(15N),w2(1H), Data Heightの四つのパラメータを出力し、CSVファイルに変換する

2_rawCSV_to_modifiedCSV
→1.の過程でrawCSVとして保存したものが存在するが、欠損値（?-?）が存在している。それらを削除、修正（行詰め）する

3_Cal_ChemicalShift_Dif
→2.の過程で生成されたmodifiedCSVがあるので、二つの修正されたCSVファイルから・化学シフト差・強度比を求める
この際に選択するCSVファイルの順番で、強度比の分子と分母が決まる。最初い選択したほう（File1）が分子で、二番目（File2）が分母にくるように計算を組んでいる

4_BarGraph
（4_LineGraph）
→3.でえられたCaliculation.CSVから棒グラフ（BarGraph）を生成する(折れ線グラフ（LineGraph）も生成できるが、色々と対応をしていない。)


この後、BarGraphで得られた画像の保存をして、その上に書いてある未帰属残基と上位10%の化学シフトを起こしている残基番号を基にPyMolにマッピング
下に4つ目のコード（BarGraph）の出力結果を示しています



--- NMRデータプロットスクリプト開始 ---

--- プロットするCSVファイルを選択してください。（通常は計算結果ファイル） ---
タンパク質のアミノ酸総数（残基の最大番号）を入力してください: 169
外れ値を除外しますか？ (y/n): y（Yes/No）
-> 外れ値の対象列は 'Chemical_Shift_Difference' に固定されています。
'Chemical_Shift_Difference' の外れ値のしきい値 (> この値) を入力してください (例: 0.5): 3

--- NMRデータプロット処理開始 ---
対象ファイル: GDP_MRTX_vs_GMPPNP_MRTX.csv
指定されたアミノ酸総数（X軸最大値）: 169

--- 読み込んだデータの最初の数行 ---
→この部分は読み込んだCSVファイルに関して、どんなデータなのか数行を目視でチェックできるようにしている
  Assignment  w1_file1  w2_file1  Data Height_file1  w1_file2  w2_file2  \
0      T2N-H   121.848     8.509            6664974   121.889     8.507   
1      E3N-H   126.501     8.293            5725592   126.772     8.299   
2      Y4N-H   121.283     8.713            2610194   121.717     8.724   
3      K5N-H   123.754     9.145            2484102   124.071     9.103   
4      L6N-H   126.627     9.342            2047543   126.869     9.305   

   Data Height_file2  w1_diff  w2_diff  Chemical_Shift_Difference  \
0             301029   -0.041    0.002                   0.008440   
1             292420   -0.271   -0.006                   0.054531   
2             224263   -0.434   -0.011                   0.087494   
3             277058   -0.317    0.042                   0.076050   
4             194585   -0.242    0.037                   0.060923   

   Intensity_Ratio  
0        22.140638  
1        19.580029  
2        11.638986  
3         8.966000  
4        10.522615  

--- 外れ値除外情報 ---
対象列: 'Chemical_Shift_Difference', 閾値: > 3.0
外れ値として除外された残基数: 1
※※除外された残基番号: [np.int64(37)]　※※
→この部分の情報は大事で、（）の中にある数字が除外した残基番号を示しているので、その部分は折り返している残基の可能性が高い。
そのため、折り返しを確認出来たら、自分で計算をしてみて、その計算結果が上位10％残基に入りそうなら、その部分も一緒にマッピングに加えるべきである 
外れ値除外後のデータ行数: 144 (元: 145)

============================================================
--- PyMOL Selection Strings ---

[1] 未帰属残基 (Unassigned / Missing Residues)
1+16+20+33+34+35+39+47+51+61+62+63+64+65+66+67+68+69+70+71+72+87+89+110+121+140
→この部分をPyMolのselectの中にコピペすると非常に楽

[2] CSD上位10%の残基 (Top 10% CSD Residues)
8+13+14+17+19+32+36+38+40+57+58+59+60+76
→この部分をPyMolのselectの中にコピペすると非常に楽

============================================================

～この下に画像～

～以下はPyMolでの処理～

ex)
>select Unassigned,resi 1+16+20+33+34+35+39+47+51+61+62+63+64+65+66+67+68+69+70+71+72+87+89+110+121+140 and name ca
>select CSD_10per,resi 8+13+14+17+19+32+36+38+40+57+58+59+60+76 and name ca